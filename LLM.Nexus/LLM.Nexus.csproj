<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>

        <PackageId>LLM.Nexus</PackageId>
        <Version>2.0.0</Version>
        <Authors>Alexandros Mouratidis</Authors>
        <Company>Alexandros Mouratidis</Company>

        <Description>A unified abstraction layer for multiple LLM providers (OpenAI, Anthropic, Google) with support for multiple simultaneous providers, named configurations, dependency injection, rich response metadata, and extensible architecture.</Description>
        <PackageTags>LLM;AI;OpenAI;Anthropic;Google;Gemini;Claude;GPT;ChatGPT;NLP;Machine-Learning;Multi-Provider</PackageTags>

        <PackageProjectUrl>https://github.com/Mouratid/llm.nexus</PackageProjectUrl>
        <RepositoryUrl>https://github.com/Mouratid/llm.nexus</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>

        <PackageReadmeFile>README.md</PackageReadmeFile>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NoWarn>$(NoWarn);CS1591</NoWarn>

        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>

        <PackageReleaseNotes>v2.0.0 - Major Release: Multi-Provider Support
• BREAKING CHANGE: New configuration schema with dictionary-based provider configuration
• Support for multiple providers in the same application with named instances
• Google Gemini provider support added
• Enhanced ILLMServiceFactory with provider selection methods (CreateService(name), GetConfiguredProviders, GetDefaultProviderName)
• New ProviderConfiguration class for individual provider settings
• Simplified dependency injection - no longer registers individual provider services
• 65 comprehensive tests covering all providers and multi-provider scenarios
• Updated documentation with migration guide and multi-provider examples

Migration: Update appsettings.json to use new Providers dictionary structure. See README for details.</PackageReleaseNotes>

        <PackageIcon>Icon.png</PackageIcon>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Google.Cloud.AIPlatform.V1" />
        <PackageReference Include="Microsoft.Extensions.Options" />
        <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" />
        <PackageReference Include="Microsoft.Extensions.Options.DataAnnotations" />
        <PackageReference Include="OpenAI" />
        <PackageReference Include="Anthropic.SDK" />
    </ItemGroup>

    <ItemGroup>
        <None Include="..\README.md" Pack="true" PackagePath="\" />
        <None Include="Icon.png" Pack="true" PackagePath="\" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="Providers\" />
    </ItemGroup>

    <ItemGroup>
      <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <_Parameter1>LLM.Nexus.Tests</_Parameter1>
      </AssemblyAttribute>
      <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
        <_Parameter1>DynamicProxyGenAssembly2</_Parameter1>
      </AssemblyAttribute>
    </ItemGroup>

</Project>
